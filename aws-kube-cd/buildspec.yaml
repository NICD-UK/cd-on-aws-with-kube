version: 0.2

env:
  parameter-store:
    AWS_ACCESS_KEY_ID: "/Test/HelloWorld/access-key-id"
    AWS_SECRET_ACCESS_KEY: "/Test/HelloWorld/access-key-secret"
  git-credential-helper: yes

phases:
  pre_build:
    commands:
      - aws sts get-caller-identity
      #
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on $(date)
      #
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME .
      #
      - echo Tagging the new image...
      - IMAGE_BASEID="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME"
      - echo Image base-id = $IMAGE_BASEID
      - chmod u+x ./aws-kube-cd/get-image-tag.sh
      - IMAGE_TAG="$(./aws-kube-cd/get-image-tag.sh $SOURCE_REPO_URL $CODEBUILD_RESOLVED_SOURCE_VERSION)"
      - docker tag $IMAGE_REPO_NAME $IMAGE_BASEID
      - docker tag $IMAGE_REPO_NAME $IMAGE_BASEID:$IMAGE_TAG
      #
      - echo Pushing the Docker image to ECR...
      - docker push $IMAGE_BASEID
      - docker push $IMAGE_BASEID:$IMAGE_TAG
      - echo Build completed on $(date)

  post_build:
    commands:
      - echo Deployment to your EKS cluster started on $(date)
      - echo Image id = $IMAGE_BASEID:$IMAGE_TAG
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name hello-world-eks-cluster
      - sed s=DOCKER_IMAGE_ID=$IMAGE_BASEID:$IMAGE_TAG= aws-kube-cd/hello-world-deployment-template.yaml | kubectl apply -f -
      - kubectl apply -f aws-kube-cd/hello-world-lbservice.yaml
      - echo Deployment completed on $(date)
      #
      - kubectl get svc hello-world-svc
